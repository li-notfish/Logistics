@page "/admin/"
@using Logistics.Shared.Model;
@using System.Diagnostics.CodeAnalysis;
@inject NavigationManager NavigationManager;
@inject IAdminService adminService;
<h3>管理员列表</h3>
@if(AdministratorsList == null || AdministratorsList.Count == 0) {
    <span>Loading AdminList....</span>
}
<div>
    <a href="/admin/create" class="btn btn-primary">
    <i class="oi oi-plus"></i>添加管理员
    </a>
    <Button Icon="fa-solid fa-arrows-rotate" Text="刷新一下" OnClick="ReGetData" class="my-2"/>
    <Table TItem="Administrators" Items=@AdministratorsList ShowExtendButtons="true" ShowExtendDeleteButton="false" ShowExtendEditButton="false">
        <TableColumns>
            <TableColumn @bind-Field="@context.Id" Width="90"/>
            <TableColumn @bind-Field="@context.Name" Width="90"/>
            <TableColumn @bind-Field="@context.CreateTime" Width="180"/>
        </TableColumns>
        <RowButtonTemplate>
            <TableCellButton Color="Color.Info" Icon="fa-solid fa-pen" Text="编辑" OnClick="@(() => OnHandelToUpdate(context.Id))"/>
        </RowButtonTemplate>
    </Table>
</div>

@code {
    private static List<Administrators> AdministratorsList = new List<Administrators>();

    protected override async Task OnInitializedAsync() {
        var result = await adminService.GetAllAsync();
        if(result!=null) {
            AdministratorsList = result;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(!firstRender) {
            System.Console.WriteLine("刷新啦");
            await ReGetData();
        }
    }

    private async Task ReGetData() {
        var result = await adminService.GetAllAsync();
        if(result!=null) {
            AdministratorsList = result;
        }
    }

    private void OnHandelToUpdate(int id) {
        NavigationManager.NavigateTo($"admin/{id}");
    }
}
