@page "/order/"
@using Logistics.Shared.Enums;
@inject IOrderService orderService;
@inject IDeliveryService DeliveryService;
<div>
    <MDataTable Headers="_header"
                ShowSelect
                @bind-Value="_selected"
                Items="Orders"
                Class="elevation-1"
                ItemKey="o => o.OrderId"
                Loading="load"
                LoadingText="Loading... Please wait">
        <TopContent>
            <MToolbar Flat>
                <MToolbarTitle>订单列表</MToolbarTitle>
                <MDivider Class="mx-4" Inset Vertical></MDivider>
                <MButton Color="primary" Dark Class="mb-2" OnClick="ReGetData">
                    刷新
                </MButton>
                <MSpacer></MSpacer>
                <MButton Color="primary"
                    Dark
                    Class="mb-2"
                    OnClick="()=> _dialog = true">新建订单
                </MButton>
                <MSpacer></MSpacer>
                <MButton Color="primary"
                    Dark
                    Class="mb-2"
                    OnClick="() => _dialogDelivery = true" Disabled="_selected.Count() == 0">派送</MButton>
                <MDialog @bind-Value="_dialogDelivery">
                    <MCard>
                        <MCardTitle>
                            <span class="text-h5">派送</span>
                        </MCardTitle>
                        <MCardText>
                            <MContainer>
                                <MRow>
                                    <MCol Cols="6">
                                        <MSelect TItem="Delivery"
                                                TItemValue="int"
                                                TValue="Delivery"
                                                Items="Deliveries"
                                                @bind-Value="delivery"
                                                ItemText="d => d.Name"
                                                ItemValue="d => d.Id"
                                                Label="选择派送员"
                                                OnSelectedItemUpdate="item => delivery = item">
                                        </MSelect>
                                    </MCol>
                                </MRow>
                            </MContainer>
                        </MCardText>
                        <MCardActions>
                            <MSpacer></MSpacer>
                            <MButton Color="blue darken-1" Text OnClick="CloseDelivery">取消</MButton>
                            <MButton Color="blue darken-1" Text OnClick="SendOrderConfirm">保存</MButton>
                        </MCardActions>
                        </MCard>
                </MDialog>
                <MDialog @bind-Value="_dialog">
                    <MCard>
                        <MCardTitle>
                            <span class="text-h5">@FormTitle</span>
                        </MCardTitle>
                        <MCardText>
                            <MContainer>
                                <MRow>
                                    <MCol Cols="6" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.Sender" Label="寄件人"></MTextField>
                                    </MCol>
                                    <MCol Cols="8" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.SenderPhone" Label="寄件人电话"></MTextField>
                                    </MCol>
                                    <MCol Cols="8" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.SenderCity" Label="寄件人地址"></MTextField>
                                    </MCol>
                                    <MCol Cols="6" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.Recipient" Label="收件人"></MTextField>
                                    </MCol>
                                    <MCol Cols="8" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.RecipientPhone" Label="收件人电话"></MTextField>
                                    </MCol>
                                    <MCol Cols="8" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.RecipientCity" Label="收件人地址"></MTextField>
                                    </MCol>
                                    <MCol Cols="8" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.OrderInfo" Label="订单信息"></MTextField>
                                    </MCol>
                                    @if(order.OrderId !=null) {
                                        <MCol Cols="6" Sm="6" Md="4">
                                        <MTextField @bind-Value="order.DeliveryId" Label="派送员ID"></MTextField>
                                    </MCol>
                                    <MCol Cols="8" Sm="6" Md="4">
                                        <MSelect TItem="StateItem" 
                                            TItemValue="string" 
                                            TValue="string"
                                            @bind-Value="selectIndex"
                                            Items="_items"
                                            ItemText="x => x.State" 
                                            ItemValue="x => x.State" 
                                            Filled Label="当前状态" 
                                            OnSelectedItemUpdate="item => order.OrderState = (OrderState)item.Number">
                                        </MSelect>
                                    </MCol>
                                    }
                                </MRow>
                            </MContainer>
                        </MCardText>
                        <MCardActions>
                            <MSpacer></MSpacer>
                            <MButton Color="blue darken-1" Text OnClick="Close">取消</MButton>
                            <MButton Color="blue darken-1" Text OnClick="Save">保存</MButton>
                        </MCardActions>
                    </MCard>
                </MDialog>
                <MDialog @bind-Value="_dialogDelete" MaxWidth="500">
                    <MCard>
                        <MCardTitle Class="text-5">你真的想删除这个订单吗？</MCardTitle>
                        <MCardActions>
                            <MSpacer></MSpacer>
                            <MButton Color="blue darken-1" Text OnClick="CloseDelete">取消删除</MButton>
                            <MButton Color="blue darken-1" Text OnClick="DeleteItemConfirm">确认删除</MButton>
                            <MSpacer></MSpacer>
                        </MCardActions>
                    </MCard>
                </MDialog>
            </MToolbar>
            <Message MessageStr="@message" _snackbar="snackbar" />
        </TopContent>
        <ItemColContent>
            @if (context.Header.Value == "actions")
        {
            <MIcon Small
               Class="mr-2"
               OnClick="()=> EditItem(context.Item)">mdi-pencil</MIcon>
            <MIcon Small
               OnClick="()=> DeleteItem(context.Item)">mdi-delete</MIcon>
            <MIcon Small OnClick="() => SendOrder()">
                mdi-local_shipping
            </MIcon>
        }
        else
        {
            @context.Value
        }
        </ItemColContent>
        <NoDataContent>
        <MButton Color="primary"
                 OnClick="ReGetData">
            刷新
        </MButton>
    </NoDataContent>
    </MDataTable>
</div>

@code {
    private List<Order> Orders { get; set; } = new List<Order>();

    private IEnumerable<Order> _selected = new List<Order>();

    private Delivery delivery = new Delivery();

    private List<Delivery> Deliveries = new List<Delivery>();

    private Order order = new Order();
    private string selectIndex = string.Empty;
    private bool menu;
    private bool load = true;


    public string FormTitle
    {
        get
        {
            return order.OrderId == null ? "新建" : "修改";
        }
    }

    record StateItem(string State, int Number);

    List<StateItem> _items = new() {
        new StateItem("无信息",0),
        new StateItem("正在运送",1),
        new StateItem("正在派件",2),
        new StateItem("已签收",3),
        new StateItem("签收失败",4),
        new StateItem("已送回",5),
    };

    private bool  _dialog;
    private bool  _dialogDelete;
    private bool _dialogDelivery;
    private bool snackbar;
    private string message = string.Empty;


    protected override async Task OnInitializedAsync() {
        var result = await orderService.GetAllAsync();
        Deliveries = await DeliveryService.GetAllAsync();
        if(Deliveries != null) {
            delivery = Deliveries.FirstOrDefault();
        }
        if(result != null) {
            Orders = result;
            load = false;
        }
    }

    private async Task ReGetData() {
        load = true;
        var result = await orderService.GetAllAsync();
        if(result != null) {
            Orders = result;
            load = false;
        }
    }

    public void Close() {
        _dialog = false;
        order = new Order();
    }

    public async Task Save() {
        Order result;
        Console.WriteLine(order.ToString());
        if(order.OrderId == null) {
            result = await orderService.AddAsync(order);
        }
        else {
            result = await orderService.UpdateAsync(order);
        }
        if(result !=null) {
            message = "订单信息保存成功！";
        }
        else {
            message = "订单信息保存失败！";
        }
        ReGetData();
        snackbar = true;
        Close();
    }

    private void EditItem(Order item) {
        order = item;
        selectIndex = _items.FirstOrDefault(x => x.Number == (int)order.OrderState).State;
        Console.WriteLine(order.OrderId);
        _dialog = true;
    }

    private void DeleteItem(Order item) {
        order = item;
        _dialogDelete = true;
    }

    private void SendOrder() {
        _dialogDelivery = true;
    }

    private async Task DeleteItemConfirm() {
        var result = await orderService.DeleteAsync(order.OrderId);
        if(result != null) {
            message = "订单删除成功！";
        }
        else {
            message = "订单删除失败！";
        }
        snackbar = true;
        await ReGetData();
        CloseDelete();
    }

    private async Task SendOrderConfirm() {
        delivery.Orders.AddRange(_selected);
        var result = await DeliveryService.UpdateAsync(delivery);
        if(result != null) {
            message = "派单成功！";
        }
        else {
            message = "派单失败！";
        }
        snackbar = true;
        await ReGetData();
        CloseDelivery();
    }

    private void CloseDelete() {
        _dialogDelete = false;
        order = new Order();
    }

    private void CloseDelivery() {
        _dialogDelivery = false;
    }

    private List<DataTableHeader<Order>> _header = new List<DataTableHeader<Order>>
    {
           new ()
           {
            Text= "订单号",
            Sortable= false,
            Value= nameof(Order.OrderId)
          },
          new DataTableHeader<Order>(){ Text= "派送员ID" , Value= nameof(Order.DeliveryId)},
          new (){ Text= "收件人", Value= nameof(Order.Recipient)},
          new (){ Text= "收件人电话", Value= nameof(Order.RecipientPhone)},
          new (){ Text= "收件地址", Value= nameof(Order.RecipientCity)},
          new (){ Text= "寄件人", Value= nameof(Order.Sender)},
          new (){ Text= "寄件人电话", Value= nameof(Order.SenderPhone)},
          new (){ Text= "寄件人地址", Value=nameof(Order.SenderCity) },
          new (){ Text= "订单日期", Value=nameof(Order.OrderDate)},
          new (){ Text= "订单详情", Value=nameof(Order.OrderInfo)},
          new (){ Text= "费用", Value=nameof(Order.Cost)},
          new (){ Text= "状态", Value=nameof(Order.OrderState)},
          new (){ Text= "Actions", Value= "actions",Sortable=false }  
      };
}
