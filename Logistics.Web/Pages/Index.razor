@page "/"
@using Logistics.Shared.Enums;
@inject IOrderService OrderService;

<PageTitle>主页</PageTitle>
<div style="display:flex; flex-direction:row;">
    <MECharts Option="_MondthOption" Width="@("50%")">
    </MECharts>
    <MECharts Option="_OrderState" Width="@("50%")"></MECharts>
    
</div>
@code{
    private object _MondthOption = new object();
    private object _OrderState = new object();

    private List<Order> Orders { get; set; }
    private IEnumerable<int> monthString { get; set;}
    private IEnumerable<int> monthCount { get; set;}
    private IEnumerable<OrderState> states { get; set; }
    private IEnumerable<int> stateCount { get; set;}
    protected async override Task OnInitializedAsync() {
        Orders = await OrderService.GetAllAsync();
        monthString = Orders.GroupBy(x => x.OrderDate.Month).Select(x => x.Key);
        monthCount = Orders.GroupBy(x => x.OrderDate.Month).Select(x => x.Count());
        states = Orders.GroupBy(x => x.OrderState).Select(x => x.Key);
        stateCount = Orders.GroupBy(x => x.OrderState).Select(x => x.Count());
        InitOption(monthString,monthCount);
        InitOption(states,stateCount);
    }

    private void InitOption(IEnumerable<int> monthString, IEnumerable<int> count) {
        _MondthOption = new
        {
            Title = new
            {
                Left = "center",
                Text = "每月订单数量"
            },
            Tooltip = new { },
            Legend = new
            {
                Right = "20px",
                Data = monthString
            },
            XAxis = new
            {
                Data = monthString
            },
            YAxis = new {
                Type="value"    
            },
            Series = new[]
        {
            new
            {
                Name = "月份",
                Type = "bar",
                Data = count
            }
    }
        };
    }

    private void InitOption(IEnumerable<OrderState> states, IEnumerable<int> count) {
        var stateString = states.Select(x => UtilityChart.EnmuToStirng((int)x)).ToArray<string>();

        var pieDataItemList =
        from state in stateString
        from num in count
        select new PieDataItem(state,num);

        _OrderState = new
        {
            Title = new
            {
                Left = "center",
                Text = "订单状态"
            },
            Legend = new {
                Orient = "vertical",
                Left = "Left"
            },
            Tooltip = new{
                Trigger = "item"
            },
            Series = new[]
            {
                new
                {
                    Name = "订单状态",
                    Radius = new[] { "0", "50%" },
                    Type = "pie",
                    Data = pieDataItemList
                }
            }
        };
    }

    record PieDataItem(string Name, int Value);
}